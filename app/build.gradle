/*
 * Copyright (c) 2014-2016 Sean Liu.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply from: rootProject.file('gradle/android-findbugs.gradle')

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "com.github.baoti.pioneer"
        minSdkVersion 9
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        /**
         * 临时文件的前缀, 不得少于3个字符
         */
        buildConfigField "String", "TMP_FILE_PREFIX", '"Pioneer-"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

task checkstyle(type: Checkstyle) {
    configFile rootProject.file('checkstyle.xml')
    source 'src/main/java'
    ignoreFailures false
    showViolations true
    include '**/*.java'

    classpath = files()
}

afterEvaluate {
    if (project.tasks.findByName('check')) {
        check.dependsOn('checkstyle')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':libPresenter')

    compile rootProject.ext.appcompatSupportLib
    compile rootProject.ext.cardviewSupportLib
    compile rootProject.ext.designSupportLib
    compile rootProject.ext.recyclerviewSupportLib

    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.jakewharton.timber:timber:4.3.1'

    // Dagger
    compile 'com.squareup.dagger:dagger:1.2.5'
    provided 'com.squareup.dagger:dagger-compiler:1.2.5'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Espresso
    androidTestCompile(rootProject.ext.annotationsSupportLib)
    androidTestCompile(rootProject.ext.testingSupportLib)
    androidTestCompile(rootProject.ext.espressoCoreSupportLib) {
        exclude group: 'javax.inject'
    }

    // Robolectric
    testCompile rootProject.ext.junit
    testCompile rootProject.ext.robolectric

    provided rootProject.ext.findbugsJsr305
    provided rootProject.ext.findbugsAnnotations
}
