/*
 * Copyright (c) 2014-2016 Sean Liu.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle-experimental:0.6.0-beta5'
    }
}

apply plugin: 'com.android.model.library'

model {
    android {
        compileSdkVersion = androidCompileSdkVersion
        buildToolsVersion = androidBuildToolsVersion

        defaultConfig.with {
            minSdkVersion.apiLevel = 7
        }

        buildTypes {
            release {
                ndk {
                    CFlags.addAll(['-Os', '-fomit-frame-pointer'])
                    cppFlags.addAll(['-Os', '-fomit-frame-pointer'])
                }
            }
        }

        /*
         * native build settings
         */
        ndk {
            moduleName = "hello-jni"
            /*
             * Other ndk flags configurable here are
             * cppFlags += "-fno-rtti"
             * cppFlags += "-fno-exceptions"
             * ldLibs    = ["android", "log"]
             * stl       = "system"
             */
            stl = "c++_static"

            CFlags.addAll(['-std=c99', '-fstrict-aliasing', '-DDUK_OPT_HAVE_CUSTOM_H'])
            cppFlags.addAll(['-std=c++11', '-fstrict-aliasing', '-DDUK_OPT_HAVE_CUSTOM_H'])
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile rootProject.ext.androidSupportLib
    compile rootProject.ext.annotationsSupportLib
    compile rootProject.ext.appcompatSupportLib
}
